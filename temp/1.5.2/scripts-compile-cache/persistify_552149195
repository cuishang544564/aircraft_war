{"persistifyArgs":{"cache":{"/Users/shancui/GitHub/aircraft_war/library/imports/3d/3d2d9df3-7a04-4c79-aa1a-3c7c6e703327.js":{"source":"\"use strict\";\ncc._RF.push(module, '3d2d93zegRMeaoaPHxucDMn', 'bulletGroup');\n// Script/bulletGroup.js\n\n'use strict';\n\n//子弹生成位置\nvar bPosition = cc.Class({\n    name: 'bPosition',\n    properties: {\n        xAxis: {\n            default: '',\n            tooltip: '初始x轴，相对hero'\n        },\n        yAxis: {\n            default: '',\n            tooltip: '初始y轴，相对hero'\n        }\n    }\n});\n\n//不限时长子弹\nvar bulletInfinite = cc.Class({\n    name: 'bulletInfinite',\n    properties: {\n        name: '',\n        freqTime: 0,\n        initPollCount: 0,\n        prefab: cc.Prefab,\n        position: {\n            default: [],\n            type: bPosition,\n            tooltip: '每次多少排子弹'\n        }\n    }\n});\n\n//有限时长子弹组\nvar bulletFiniteG = cc.Class({\n    name: 'bulletFiniteG',\n    extends: bulletInfinite,\n    properties: {\n        finiteTime: 0,\n        orginName: ''\n    }\n});\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: function properties() {\n        return {\n            bulletInfinite: {\n                default: null,\n                type: bulletInfinite,\n                tooltip: '无限时长子弹组'\n            },\n            bulletFiniteG: {\n                default: [],\n                type: bulletFiniteG,\n                tooltip: '有限时长子弹组'\n            },\n            hero: cc.Node\n        };\n    },\n\n    // use this for initialization\n    onLoad: function onLoad() {\n        this.eState = D.commonInfo.gameState.none;\n        //初始化无限子弹组\n        D.common.initObjPool(this, this.bulletInfinite);\n        //初始化🈶️限子弹组\n        D.common.batchInitObjPool(this, this.bulletFiniteG);\n    },\n\n    startAction: function startAction() {\n        this.eState = D.commonInfo.gameState.start;\n        //生成子弹\n        this.getNewbullet(this.bulletInfinite);\n        this.bICallback = function () {\n            this.getNewbullet(this.bulletInfinite);\n        }.bind(this);\n        this.schedule(this.bICallback, this.bulletInfinite.freqTime);\n    },\n    pauseAction: function pauseAction() {\n        this.enabled = false;\n        this.eState = D.commonInfo.gameState.pause;\n    },\n    resumeAction: function resumeAction() {\n        this.enabled = true;\n        this.eState = D.commonInfo.gameState.start;\n    },\n    //换子弹\n    changeBullet: function changeBullet(ufoBulletName) {\n        this.unschedule(this.bICallback);\n        this.unschedule(this.bFCallback);\n        for (var bi = 0; bi < this.bulletFiniteG.length; bi++) {\n\n            if (this.bulletFiniteG[bi].orginName == ufoBulletName) {\n                this.bFCallback = function (e) {\n                    this.getNewbullet(this.bulletFiniteG[e]);\n                }.bind(this, bi);\n                this.schedule(this.bFCallback, this.bulletFiniteG[bi].freqTime, this.bulletFiniteG[bi].finiteTime);\n                var delay = this.bulletFiniteG[bi].freqTime * this.bulletFiniteG[bi].finiteTime;\n                this.schedule(this.bICallback, this.bulletInfinite.freqTime, cc.macro.REPEAT_FOREVER, delay);\n            }\n        }\n    },\n    //生成子弹\n    getNewbullet: function getNewbullet(bulletInfo) {\n        var poolName = bulletInfo.name + 'Pool';\n        for (var bc = 0; bc < bulletInfo.position.length; bc++) {\n            var newNode = D.common.genNewNode(this[poolName], bulletInfo.prefab, this.node);\n            var newV2 = this.getBulletPostion(bulletInfo.position[bc]);\n            newNode.setPosition(newV2);\n            newNode.getComponent('bullet').bulletGroup = this;\n        }\n    },\n    //获取子弹位置\n    getBulletPostion: function getBulletPostion(posInfo) {\n        var hPos = this.hero.getPosition();\n        var newV2_x = hPos.x + eval(posInfo.xAxis);\n        var newV2_y = hPos.y + eval(posInfo.yAxis);\n        return cc.p(newV2_x, newV2_y);\n    },\n\n    //子弹灭亡\n    bulletDied: function bulletDied(nodeinfo) {\n        //回收节点\n        D.common.backObjPool(this, nodeinfo);\n    }\n});\n\ncc._RF.pop();","deps":{}},"/Users/shancui/GitHub/aircraft_war/library/imports/c5/c597baf8-922b-41fb-bb76-dad310065da4.js":{"source":"\"use strict\";\ncc._RF.push(module, 'c597br4kitB+7t22tMQBl2k', 'end');\n// Script/end.js\n\n'use strict';\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        topScore: cc.Label,\n        currentScore: cc.Label\n    },\n\n    // use this for initialization\n    onLoad: function onLoad() {\n        //读取最高分和这次的得分\n        var _topScore = cc.sys.localStorage.getItem('topScore');\n        this.topScore.string = _topScore;\n        var _currentScore = cc.sys.localStorage.getItem('currentScore');\n        this.currentScore.string = _currentScore;\n        //历史得分\n        cc.director.preloadScene('historyScore');\n    },\n    //游戏重新运行\n    gameRestart: function gameRestart() {\n        cc.director.loadScene('main');\n        //cc.director.resume();\n    },\n    // 退出游戏\n    gameExit: function gameExit() {\n        cc.director.loadScene('start');\n    },\n    //历史得分\n    gotoHistoryScore: function gotoHistoryScore() {\n        cc.director.loadScene('historyScore');\n    }\n\n});\n\ncc._RF.pop();","deps":{}},"/Users/shancui/GitHub/aircraft_war/library/imports/14/14abe7bd-0a8c-42a1-b5a5-fe799e114bfc.js":{"source":"\"use strict\";\ncc._RF.push(module, '14abee9CoxCobWl/nmeEUv8', 'enemy');\n// Script/enemy.js\n\n'use strict';\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        xMinSpeed: {\n            default: 0,\n            type: cc.Integer,\n            tooltip: 'x轴最小速度'\n        },\n        xMaxSpeed: {\n            default: 0,\n            type: cc.Integer,\n            tooltip: 'x轴最大速度'\n        },\n        yMinSpeed: {\n            default: 0,\n            type: cc.Integer,\n            tooltip: 'y轴最小速度'\n        },\n        yMaxSpeed: {\n            default: 0,\n            type: cc.Integer,\n            tooltip: 'y轴最大速度'\n        },\n        initHP: {\n            default: 0,\n            type: cc.Integer,\n            tooltip: '初始生命值'\n        },\n        initSpriteFrame: {\n            default: null,\n            type: cc.SpriteFrame,\n            tooltip: '初始化的图像'\n        },\n        score: {\n            default: 0,\n            type: cc.Integer,\n            tooltip: '死后获得的分数'\n\n        },\n        enemyDownClip: cc.AudioClip\n    },\n\n    // use this for initialization\n    onLoad: function onLoad() {\n        console.log('enemy onload');\n        cc.director.getCollisionManager().enabled = true;\n\n        this.xSpeed = Math.random() * (this.xMaxSpeed - this.xMinSpeed) + this.xMinSpeed;\n        this.ySpeed = cc.random0To1() * (this.yMaxSpeed - this.yMinSpeed) + this.yMinSpeed;\n        this.enemyGroup = this.node.parent.getComponent('enemyGroup');\n    },\n    init: function init() {\n\n        if (this.node.group != 'enemy') {\n            this.node.group = 'enemy';\n        }\n        if (this.hP != this.initHP) {\n            this.hP = this.initHP;\n        }\n        var nSprite = this.node.getComponent(cc.Sprite);\n        if (nSprite.spriteFrame != this.initSpriteFrame) {\n            nSprite.spriteFrame = this.initSpriteFrame;\n        }\n    },\n\n    // called every frame, uncomment this function to activate update callback\n    update: function update(dt) {\n        if (this.enemyGroup.eState != D.commonInfo.gameState.start) {\n            return;\n        }\n        //分数不同 速度不同\n        var scores = this.enemyGroup.getScore();\n        if (scores <= 50000) {\n            this.node.y += dt * this.ySpeed;\n        } else if (scores > 50000 && scores <= 100000) {\n            this.node.y += dt * this.ySpeed - 0.5;\n        } else if (scores > 100000 && scores <= 150000) {\n            this.node.y += dt * this.ySpeed - 1;\n        } else if (scores > 150000 && scores <= 200000) {\n            this.node.y += dt * this.ySpeed - 1.5;\n        } else if (scores > 200000 && scores <= 300000) {\n            this.node.y += dt * this.ySpeed - 2;\n        } else {\n            this.node.y += dt * this.ySpeed - 3;\n        }\n        this.node.x += dt * this.xSpeed;\n        //出屏幕后 回收节点\n        if (this.node.y < -this.node.parent.height / 2) {\n            this.enemyGroup.enemyDied(this.node, 0);\n        }\n    },\n    //碰撞检测\n    onCollisionEnter: function onCollisionEnter(other, self) {\n        if (other.node.group != 'bullet') {\n            return;\n        }\n        var bullet = other.node.getComponent('bullet');\n\n        if (this.hP > 0) {\n            //防止再次碰撞\n            this.hP -= bullet.hpDrop;\n        } else {\n            return;\n        }\n        if (this.hP <= 0) {\n            this.node.group = 'default'; //不让动画在执行碰撞\n            //播放动画\n            var anim = this.getComponent(cc.Animation);\n            var animName = self.node.name + 'ani';\n            anim.play(animName);\n            anim.on('finished', this.onFinished, this);\n            //播放音效\n            cc.audioEngine.playEffect(this.enemyDownClip, false);\n        }\n    },\n    //动画结束后 动画节点回收\n    onFinished: function onFinished(event) {\n        this.enemyGroup.enemyDied(this.node, this.score);\n    }\n\n});\n\ncc._RF.pop();","deps":{}},"/Users/shancui/GitHub/aircraft_war/library/imports/2d/2db2295d-c356-4458-a014-521ab36e593b.js":{"source":"\"use strict\";\ncc._RF.push(module, '2db22ldw1ZEWKAUUhqzblk7', 'globals');\n// Script/globals.js\n\n\"use strict\";\n\n// declare global variable \"D\"\nwindow.D = {\n    // singletons\n    common: null, //公共方法\n    commonInfo: null };\n\ncc._RF.pop();","deps":{}},"/Users/shancui/GitHub/aircraft_war/library/imports/c1/c11abad6-6403-4ed9-a559-484e1dc44bd6.js":{"source":"\"use strict\";\ncc._RF.push(module, 'c11abrWZANO2aVZSE4dxEvW', 'historyScore');\n// Script/historyScore.js\n\n'use strict';\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        itemPrefab: cc.Prefab,\n        scrollContent: cc.Node,\n        backGame: cc.Node\n    },\n\n    // use this for initialization\n    onLoad: function onLoad() {\n        var infoData = JSON.parse(cc.sys.localStorage.getItem('score'));\n\n        for (var i = 0; i < infoData.length; ++i) {\n\n            var item = cc.instantiate(this.itemPrefab);\n\n            var data = infoData[i];\n\n            this.scrollContent.addChild(item);\n\n            item.getComponent('scoreItemTemplate').init({\n\n                score: data.score,\n                time: data.time\n\n            });\n        }\n        this.backGame.on('touchstart', this.backGameO, this);\n    },\n    backGameO: function backGameO() {\n        cc.director.loadScene('end');\n    }\n\n    // called every frame, uncomment this function to activate update callback\n    // update: function (dt) {\n\n    // },\n});\n\ncc._RF.pop();","deps":{}},"/Users/shancui/GitHub/aircraft_war/library/imports/e7/e7aaa8e9-1817-4001-a19a-522994e0c9c7.js":{"source":"\"use strict\";\ncc._RF.push(module, 'e7aaajpGBdAAaGaUimU4MnH', 'scoreItemTemplate');\n// Script/scoreItemTemplate.js\n\n'use strict';\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        itemScore: cc.Label,\n        itemTime: cc.Label\n    },\n\n    // use this for initialization\n    onLoad: function onLoad() {},\n    init: function init(data) {\n        this.itemScore.string = '积分：' + data.score;\n        this.itemTime.string = '时间：' + data.time;\n    }\n\n    // called every frame, uncomment this function to activate update callback\n    // update: function (dt) {\n\n    // },\n});\n\ncc._RF.pop();","deps":{}},"/Users/shancui/GitHub/aircraft_war/library/imports/28/280c3aec-6492-4a9d-9f51-a9b00b570b4a.js":{"source":"\"use strict\";\ncc._RF.push(module, '280c3rsZJJKnZ9RqbALVwtK', 'start');\n// Script/start.js\n\n'use strict';\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        game_loading: cc.Node\n    },\n\n    // use this for initialization\n    onLoad: function onLoad() {\n\n        var gameloading = this.game_loading.getComponent(cc.Animation);\n        gameloading.play();\n        cc.director.preloadScene('main');\n    },\n\n    //开始游戏\n    startGame: function startGame() {\n        cc.director.loadScene('main', function () {\n            console.log('main is loaded');\n        });\n    }\n});\n\ncc._RF.pop();","deps":{}},"/Users/shancui/GitHub/aircraft_war/library/imports/1e/1e7a0cdf-22e2-40f8-a9fd-0c07d8e79e38.js":{"source":"\"use strict\";\ncc._RF.push(module, '1e7a0zfIuJA+Kn9DAfY5544', 'ufo');\n// Script/ufo.js\n\n'use strict';\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        xMinSpeed: { //x轴最小速度\n            default: 0,\n            type: cc.Integer\n        },\n        xMaxSpeed: { //x轴最大速度\n            default: 0,\n            type: cc.Integer\n        },\n        yMinSpeed: {\n            default: 0,\n            type: cc.Integer\n        }, //y轴最小速度\n\n        yMaxSpeed: { //y轴最大速度\n            default: 0,\n            type: cc.Integer\n        },\n        getUfoClip: cc.AudioClip\n    },\n\n    // use this for initialization\n    onLoad: function onLoad() {\n        cc.director.getCollisionManager().enabled = true;\n\n        this.xSpeed = Math.random() * (this.xMaxSpeed - this.xMinSpeed) + this.xMinSpeed;\n        this.ySpeed = cc.random0To1() * (this.yMaxSpeed - this.yMinSpeed) + this.yMinSpeed;\n        this.ufoGroup = this.node.parent.getComponent('ufoGroup');\n    },\n\n    //碰撞检测\n    onCollisionEnter: function onCollisionEnter(other, self) {\n        this.node.destroy();\n        //D.game.ufoBomb();\n        cc.audioEngine.playEffect(this.getUfoClip, false);\n    },\n\n    // called every frame, uncomment this function to activate update callback\n    update: function update(dt) {\n        if (this.ufoGroup.eState != D.commonInfo.gameState.start) {\n            return;\n        }\n        this.node.x += dt * this.xSpeed;\n        this.node.y += dt * this.ySpeed;\n        //出屏幕后\n        if (this.node.y < -this.node.parent.height / 2) {\n            this.ufoGroup.ufoDied(this.node);\n        }\n    }\n});\n\ncc._RF.pop();","deps":{}},"/Users/shancui/GitHub/aircraft_war/library/imports/07/07c5835e-0105-442e-b3f7-2f64423b2ac0.js":{"source":"\"use strict\";\ncc._RF.push(module, '07c58NeAQVELrP3L2RCOyrA', 'ufoGroup');\n// Script/ufoGroup.js\n\n'use strict';\n\n//ufo组\nvar ufoG = cc.Class({\n    name: 'ufoG',\n    properties: {\n        name: '',\n        freqTime: 0,\n        prefab: cc.Prefab,\n        initPoolCount: 0,\n        minDelay: {\n            default: 0,\n            tooltip: '最小延迟'\n        },\n        maxDelay: {\n            default: 0,\n            tooltip: '最大延迟'\n        }\n    }\n});\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        ufoG: {\n            default: [],\n            type: ufoG\n        }\n    },\n\n    // use this for initialization\n    onLoad: function onLoad() {\n        this.eState = D.commonInfo.gameState.none;\n        //console.log(this.ufoG);\n        D.common.batchInitObjPool(this, this.ufoG);\n    },\n    startAction: function startAction() {\n        // ufo \n        this.eState = D.commonInfo.gameState.start;\n        //定时生成敌机\n        for (var ui = 0; ui < this.ufoG.length; ++ui) {\n            var freqTime = this.ufoG[ui].freqTime;\n            var fName = 'callback_' + ui;\n            this[fName] = function (e) {\n                this.randNewUfo(this.ufoG[e]);\n            }.bind(this, ui);\n            this.schedule(this[fName], freqTime);\n        }\n    },\n\n    //随机时间生成敌机\n    randNewUfo: function randNewUfo(ufoInfo) {\n        var delay = Math.random() * (ufoInfo.maxDelay - ufoInfo.minDelay) + ufoInfo.minDelay;\n        this.scheduleOnce(function (e) {\n            this.getNewUfo(e);\n        }.bind(this, ufoInfo), delay);\n    },\n    //生成敌机\n    getNewUfo: function getNewUfo(ufoInfo) {\n        var poolName = ufoInfo.name + 'Pool';\n        var newNode = D.common.genNewNode(this[poolName], ufoInfo.prefab, this.node);\n        var newV2 = this.getNewUfoPositon(newNode);\n        newNode.setPosition(newV2);\n    },\n    //敌机随机生成的位置\n    getNewUfoPositon: function getNewUfoPositon(newUfo) {\n        //位于上方，先不可见\n        var randx = cc.randomMinus1To1() * (this.node.parent.width / 2 - newUfo.width / 2);\n        var randy = this.node.parent.height / 2 + newUfo.height / 2;\n        return cc.v2(randx, randy);\n    },\n    //重新开始\n    resumeAction: function resumeAction() {\n        this.enabled = true;\n        this.eState = D.commonInfo.gameState.start;\n    },\n    //暂停\n    pauseAction: function pauseAction() {\n        this.enabled = false;\n        this.eState = D.commonInfo.gameState.pause;\n    },\n    ufoDied: function ufoDied(nodeinfo) {\n        //回收节点\n        D.common.backObjPool(this, nodeinfo);\n    }\n});\n\ncc._RF.pop();","deps":{}},"/Users/shancui/GitHub/aircraft_war/library/imports/81/81be8d98-c12f-4bd4-b658-b9f5574ab08f.js":{"source":"\"use strict\";\ncc._RF.push(module, '81be82YwS9L1LZYufVXSrCP', 'bullet');\n// Script/bullet.js\n\n\"use strict\";\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        xSpeed: cc.Integer, //x轴速度\n        ySpeed: cc.Integer, //y轴速度\n        hpDrop: cc.Integer },\n\n    // use this for initialization\n    onLoad: function onLoad() {\n        cc.director.getCollisionManager().enabled = true;\n    },\n\n    //碰撞检测\n    onCollisionEnter: function onCollisionEnter(other, self) {\n        this.bulletGroup.bulletDied(self.node);\n    },\n    // called every frame, uncomment this function to activate update callback\n    update: function update(dt) {\n        if (this.bulletGroup.eState != D.commonInfo.gameState.start) {\n            return;\n        }\n        this.node.x += dt * this.xSpeed;\n        this.node.y += dt * this.ySpeed;\n\n        if (this.node.y > this.node.parent.height) {\n            this.bulletGroup.bulletDied(this.node);\n        }\n    }\n\n});\n\ncc._RF.pop();","deps":{}},"/Users/shancui/GitHub/aircraft_war/library/imports/70/703ca35d-4890-4c1b-98f1-62f3c5c16bcf.js":{"source":"\"use strict\";\ncc._RF.push(module, '703caNdSJBMG5jxYvPFwWvP', 'enemyGroup');\n// Script/enemyGroup.js\n\n'use strict';\n\n//敌机组\nvar enemyG = cc.Class({\n    name: 'enemyG',\n    properties: {\n        name: '',\n        freqTime: 0,\n        initPollCount: 0,\n        prefab: cc.Prefab\n    }\n});\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: function properties() {\n        return {\n            enemyG: {\n                default: [],\n                type: enemyG\n            },\n            main: {\n                default: null,\n                type: require('main')\n            }\n        };\n    },\n\n    // use this for initialization\n    onLoad: function onLoad() {\n        //初始化敌机组\n        this.eState = D.commonInfo.gameState.none;\n        D.common.batchInitObjPool(this, this.enemyG);\n    },\n    startAction: function startAction() {\n\n        this.eState = D.commonInfo.gameState.start;\n        //定时生成敌机\n        for (var ei = 0; ei < this.enemyG.length; ++ei) {\n            var freqTime = this.enemyG[ei].freqTime;\n            var fName = 'callback_' + ei;\n            this[fName] = function (e) {\n                this.getNewEnemy(this.enemyG[e]);\n            }.bind(this, ei);\n            this.schedule(this[fName], freqTime);\n        }\n    },\n    //重新开始\n    resumeAction: function resumeAction() {\n        this.enabled = true;\n        this.eState = D.commonInfo.gameState.start;\n    },\n    //暂停\n    pauseAction: function pauseAction() {\n        this.enabled = false;\n        this.eState = D.commonInfo.gameState.pause;\n    },\n    //生成敌机\n    getNewEnemy: function getNewEnemy(enemyInfo) {\n        var poolName = enemyInfo.name + 'Pool';\n        var newNode = D.common.genNewNode(this[poolName], enemyInfo.prefab, this.node);\n        var newV2 = this.getNewEnemyPositon(newNode);\n        newNode.setPosition(newV2);\n        newNode.getComponent('enemy').init();\n    },\n    //敌机随机生成的位置\n    getNewEnemyPositon: function getNewEnemyPositon(newEnemy) {\n        //位于上方，先不可见\n        var randx = cc.randomMinus1To1() * (this.node.parent.width / 2 - newEnemy.width / 2);\n        var randy = this.node.parent.height / 2 + newEnemy.height / 2;\n        return cc.v2(randx, randy);\n    },\n    enemyDied: function enemyDied(nodeinfo, score) {\n        //回收节点\n        D.common.backObjPool(this, nodeinfo);\n        //增加分数\n        if (parseInt(score) > 0) {\n            this.main.gainScore(score);\n        }\n    },\n    getScore: function getScore() {\n        return this.main.getScore();\n    }\n});\n\ncc._RF.pop();","deps":{"main":"/Users/shancui/GitHub/aircraft_war/library/imports/6a/6afa0a61-17b7-4f91-aff3-959b45147a30.js"}},"/Users/shancui/GitHub/aircraft_war/library/imports/3f/3f0cc1d4-79fc-4e2c-af7e-2b9ff3a76bf8.js":{"source":"\"use strict\";\ncc._RF.push(module, '3f0ccHUefxOLK9+K5/zp2v4', 'hero');\n// Script/hero.js\n\n'use strict';\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: function properties() {\n        return {\n            blowupani: {\n                default: null,\n                type: cc.Prefab,\n                tooltip: '爆炸动画'\n            },\n\n            gameOverClip: cc.AudioClip,\n            main: {\n                default: null,\n                type: require('main')\n            },\n            bulletGroup: {\n                default: null,\n                type: require('bulletGroup')\n            }\n        };\n    },\n\n    // use this for initialization\n    onLoad: function onLoad() {\n        this.eState = D.commonInfo.gameState.none;\n        cc.director.getCollisionManager().enabled = true;\n        this.onDrag();\n    },\n\n    //添加拖动监听\n    onDrag: function onDrag() {\n        this.node.on('touchmove', this.dragMove, this);\n    },\n    //去掉拖动监听\n    offDrag: function offDrag() {\n        this.node.off('touchmove', this.dragMove, this);\n    },\n    //拖动\n    dragMove: function dragMove(event) {\n        var locationv = event.getLocation();\n        var location = this.node.parent.convertToNodeSpaceAR(locationv);\n        //飞机不移出屏幕 \n        var minX = -this.node.parent.width / 2 + this.node.width / 2;\n        var maxX = -minX;\n        var minY = -this.node.parent.height / 2 + this.node.height / 2;\n        var maxY = -minY;\n        if (location.x < minX) {\n            location.x = minX;\n        }\n        if (location.x > maxX) {\n            location.x = maxX;\n        }\n        if (location.y < minY) {\n            location.y = minY;\n        }\n        if (location.y > maxY) {\n            location.y = maxY;\n        }\n        this.node.setPosition(location);\n    },\n    //碰撞监测\n    onCollisionEnter: function onCollisionEnter(other, self) {\n        if (other.node.group == 'ufo') {\n            if (other.node.name == 'ufoBullet') {\n                this.bulletGroup.changeBullet(other.node.name);\n            } else if (other.node.name == 'ufoBomb') {\n                this.main.getUfoBomb();\n            }\n        } else if (other.node.group == 'enemy') {\n            //播放动画\n            var po = this.node.getPosition();\n            var blowup = cc.instantiate(this.blowupani);\n            this.node.parent.addChild(blowup);\n            blowup.setPosition(po);\n            var animation = blowup.getComponent(cc.Animation);\n            animation.on('finished', this.onFinished, blowup);\n            //播放音效\n            cc.audioEngine.playEffect(this.gameOverClip, false);\n            //清除节点\n            this.node.destroy();\n            //更新分数 \n            this.main.gameOver();\n        } else {\n            return false;\n        }\n    },\n\n    onFinished: function onFinished(event) {\n        //动画结束后\n        this.destroy();\n        //cc.director.pause();\n    }\n});\n\ncc._RF.pop();","deps":{"main":"/Users/shancui/GitHub/aircraft_war/library/imports/6a/6afa0a61-17b7-4f91-aff3-959b45147a30.js","bulletGroup":"/Users/shancui/GitHub/aircraft_war/library/imports/3d/3d2d9df3-7a04-4c79-aa1a-3c7c6e703327.js"}},"/Users/shancui/GitHub/aircraft_war/library/imports/6a/6afa0a61-17b7-4f91-aff3-959b45147a30.js":{"source":"\"use strict\";\ncc._RF.push(module, '6afa0phF7dPka/zlZtFFHow', 'main');\n// Script/main.js\n\n'use strict';\n\ncc.Class({\n\n    extends: cc.Component,\n\n    properties: function properties() {\n        return {\n            pause: cc.Button,\n            btnSprite: {\n                default: [],\n                type: cc.SpriteFrame,\n                tooltip: '暂停按钮不同状态的图片'\n            },\n            bomb: cc.Node,\n            gameMusic: {\n                default: null,\n                type: cc.AudioSource\n            },\n            useBombClip: cc.AudioClip,\n            enemyGroup: {\n                default: null,\n                type: require('enemyGroup')\n            },\n            hero: {\n                default: null,\n                type: require('hero')\n            },\n            ufoGroup: {\n                default: null,\n                type: require('ufoGroup')\n            },\n            bulletGroup: {\n                default: null,\n                type: require('bulletGroup')\n            },\n            scoreDisplay: cc.Label,\n            bombNoDisplay: cc.Label\n        };\n    },\n\n    // use this for initialization\n    onLoad: function onLoad() {\n\n        this.score = 0;\n        this.bombNo = 0;\n        this.scoreDisplay.string = this.score;\n        this.bombNoDisplay.string = this.bombNo;\n        this.eState = D.commonInfo.gameState.start;\n\n        this.enemyGroup.startAction();\n        this.bulletGroup.startAction();\n        this.ufoGroup.startAction();\n        this.bomb.on('touchstart', this.bombOnclick, this);\n        this.gameMusic.play();\n    },\n\n    bombOnclick: function bombOnclick() {\n        var bombNoLabel = this.bomb.getChildByName('bombNo').getComponent(cc.Label);\n        var bombNo = parseInt(bombNoLabel.string);\n\n        if (bombNo > 0) {\n            bombNoLabel.string = bombNo - 1;\n            this.removeEnemy();\n            cc.audioEngine.playEffect(this.useBombClip, false);\n        } else {\n            console.log('没有子弹');\n        }\n    },\n    // called every frame, uncomment this function to activate update callback\n    //update: function (dt) {\n\n    //},\n\n    //暂停按钮点击事件  \n    pauseClick: function pauseClick() {\n        //暂停 继续\n\n        if (this.eState == D.commonInfo.gameState.pause) {\n            this.resumeAction();\n            this.eState = D.commonInfo.gameState.start;\n        } else if (this.eState == D.commonInfo.gameState.start) {\n            this.pauseAction();\n            this.eState = D.commonInfo.gameState.pause;\n        }\n    },\n    //游戏继续\n    resumeAction: function resumeAction() {\n        this.enemyGroup.resumeAction();\n        this.bulletGroup.resumeAction();\n        this.ufoGroup.resumeAction();\n        this.hero.onDrag();\n        this.gameMusic.resume();\n        this.pause.normalSprite = this.btnSprite[0];\n        this.pause.pressedSprite = this.btnSprite[1];\n        this.pause.hoverSprite = this.btnSprite[1];\n    },\n    //游戏暂停\n    pauseAction: function pauseAction() {\n        this.enemyGroup.pauseAction();\n        this.bulletGroup.pauseAction();\n        this.hero.offDrag();\n        this.gameMusic.pause();\n        this.ufoGroup.pauseAction();\n        this.pause.normalSprite = this.btnSprite[2];\n        this.pause.pressedSprite = this.btnSprite[3];\n        this.pause.hoverSprite = this.btnSprite[3];\n    },\n    //增加分数\n    gainScore: function gainScore(scoreno) {\n        this.score += scoreno;\n        //更新 scoreDisplay Label 的文字\n        this.scoreDisplay.string = this.score.toString();\n    },\n    //get分数\n    getScore: function getScore() {\n        return parseInt(this.scoreDisplay.string);\n    },\n    //分数写到本地（ 当前分 最高分 历史记录）\n    updateScore: function updateScore() {\n        var currentScore = this.scoreDisplay.string;\n        var scoreData = {\n            'score': currentScore,\n            'time': D.common.timeFmt(new Date(), 'yyyy-MM-dd hh:mm:ss')\n        };\n        var preData = cc.sys.localStorage.getItem('score');\n        var preTopScore = cc.sys.localStorage.getItem('topScore');\n        if (!preTopScore || parseInt(preTopScore) < parseInt(currentScore)) {\n            cc.sys.localStorage.setItem('topScore', currentScore);\n        }\n        if (!preData) {\n            preData = [];\n            preData.unshift(scoreData);\n        } else {\n            preData = JSON.parse(preData);\n            if (!(preData instanceof Array)) {\n                preData = [];\n            }\n            preData.unshift(scoreData);\n        }\n        cc.sys.localStorage.setItem('currentScore', currentScore);\n        cc.sys.localStorage.setItem('score', JSON.stringify(preData));\n    },\n    //炸弹清除敌机\n    removeEnemy: function removeEnemy() {\n        this.enemyGroup.node.removeAllChildren();\n    },\n    //接到炸弹\n    getUfoBomb: function getUfoBomb() {\n        if (parseInt(this.bombNoDisplay.string) < 3) {\n            //多于三个炸弹就不累加\n            this.bombNoDisplay.string += 1;\n        }\n    },\n    //游戏结束\n    gameOver: function gameOver() {\n        this.pauseAction();\n        this.updateScore();\n        cc.director.loadScene('end');\n    }\n});\n\ncc._RF.pop();","deps":{"enemyGroup":"/Users/shancui/GitHub/aircraft_war/library/imports/70/703ca35d-4890-4c1b-98f1-62f3c5c16bcf.js","hero":"/Users/shancui/GitHub/aircraft_war/library/imports/3f/3f0cc1d4-79fc-4e2c-af7e-2b9ff3a76bf8.js","ufoGroup":"/Users/shancui/GitHub/aircraft_war/library/imports/07/07c5835e-0105-442e-b3f7-2f64423b2ac0.js","bulletGroup":"/Users/shancui/GitHub/aircraft_war/library/imports/3d/3d2d9df3-7a04-4c79-aa1a-3c7c6e703327.js"}},"/Users/shancui/GitHub/aircraft_war/library/imports/67/67917573-3201-46e0-b747-6ea8f0686918.js":{"source":"\"use strict\";\ncc._RF.push(module, '67917VzMgFG4LdHbqjwaGkY', 'common');\n// Script/common.js\n\n'use strict';\n\nvar gameState = cc.Enum({\n    none: 0,\n    start: 1,\n    stop: 2\n});\n\nvar common = cc.Class({\n\n    extends: cc.Component,\n\n    properties: {},\n    statics: {\n        gameState: gameState\n    },\n    // use this for initialization\n    onLoad: function onLoad() {\n        console.log(D);\n        D.commonInfo = common;\n        D.common = this;\n    },\n    //批量初始化对象池 \n    batchInitObjPool: function batchInitObjPool(thisO, objArray) {\n\n        for (var i = 0; i < objArray.length; i++) {\n            var objinfo = objArray[i];\n            this.initObjPool(thisO, objinfo);\n        }\n    },\n\n    //初始化对象池\n    initObjPool: function initObjPool(thisO, objInfo) {\n\n        var name = objInfo.name;\n        var poolName = name + 'Pool';\n        thisO[poolName] = new cc.NodePool();\n\n        var initPollCount = objInfo.initPollCount;\n\n        for (var ii = 0; ii < initPollCount; ++ii) {\n            var nodeO = cc.instantiate(objInfo.prefab); // 创建节点\n            thisO[poolName].put(nodeO); // 通过 putInPool 接口放入对象池\n        }\n    },\n\n    //生成节点\n    genNewNode: function genNewNode(pool, prefab, nodeParent) {\n\n        var newNode = null;\n        if (pool.size() > 0) {\n            // 通过 size 接口判断对象池中是否有空闲的对象\n            newNode = pool.get();\n        } else {\n            // 如果没有空闲对象，也就是对象池中备用对象不够时，我们就用 cc.instantiate 重新创建\n            newNode = cc.instantiate(prefab);\n        }\n        nodeParent.addChild(newNode);\n        return newNode;\n    },\n    //放回对象池\n    backObjPool: function backObjPool(thisO, nodeinfo) {\n        var poolName = nodeinfo.name + 'Pool';\n        thisO[poolName].put(nodeinfo);\n    },\n    //时间格式化\n    timeFmt: function timeFmt(time, fmt) {\n        //author: meizz \n        var o = {\n            \"M+\": time.getMonth() + 1, //月份 \n            \"d+\": time.getDate(), //日 \n            \"h+\": time.getHours(), //小时 \n            \"m+\": time.getMinutes(), //分 \n            \"s+\": time.getSeconds(), //秒 \n            \"q+\": Math.floor((time.getMonth() + 3) / 3), //季度 \n            \"S\": time.getMilliseconds() //毫秒 \n        };\n        if (/(y+)/.test(fmt)) fmt = fmt.replace(RegExp.$1, (time.getFullYear() + \"\").substr(4 - RegExp.$1.length));\n        for (var k in o) {\n            if (new RegExp(\"(\" + k + \")\").test(fmt)) fmt = fmt.replace(RegExp.$1, RegExp.$1.length == 1 ? o[k] : (\"00\" + o[k]).substr((\"\" + o[k]).length));\n        }return fmt;\n    }\n\n});\n\ncc._RF.pop();","deps":{}},"/Users/shancui/GitHub/aircraft_war/library/imports/96/96d42acc-32e9-45b1-ae24-65df37b91e4b.js":{"source":"\"use strict\";\ncc._RF.push(module, '96d42rMMulFsa4kZd83uR5L', 'NewScript');\n// Script/NewScript.js\n\n\"use strict\";\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        // foo: {\n        //    default: null,      // The default value will be used only when the component attaching\n        //                           to a node for the first time\n        //    url: cc.Texture2D,  // optional, default is typeof default\n        //    serializable: true, // optional, default is true\n        //    visible: true,      // optional, default is true\n        //    displayName: 'Foo', // optional\n        //    readonly: false,    // optional, default is false\n        // },\n        // ...\n    },\n\n    // use this for initialization\n    onLoad: function onLoad() {}\n\n});\n\ncc._RF.pop();","deps":{}}},"packageCache":{"/Users/shancui/GitHub/aircraft_war/assets/Script/package.json":false,"/Users/shancui/GitHub/aircraft_war/assets/package.json":false,"/Users/shancui/GitHub/aircraft_war/package.json":false,"/Users/shancui/GitHub/package.json":false,"/Users/shancui/package.json":false,"/Users/package.json":false,"/package.json":false,"/Users/shancui/GitHub/aircraft_war/assets/Script/bullet.js":false,"/Users/shancui/GitHub/aircraft_war/assets/Script/bulletGroup.js":false,"/Users/shancui/GitHub/aircraft_war/assets/Script/common.js":false,"/Users/shancui/GitHub/aircraft_war/assets/Script/end.js":false,"/Users/shancui/GitHub/aircraft_war/assets/Script/enemy.js":false,"/Users/shancui/GitHub/aircraft_war/assets/Script/enemyGroup.js":false,"/Users/shancui/GitHub/aircraft_war/assets/Script/globals.js":false,"/Users/shancui/GitHub/aircraft_war/assets/Script/hero.js":false,"/Users/shancui/GitHub/aircraft_war/assets/Script/historyScore.js":false,"/Users/shancui/GitHub/aircraft_war/assets/Script/main.js":false,"/Users/shancui/GitHub/aircraft_war/assets/Script/scoreItemTemplate.js":false,"/Users/shancui/GitHub/aircraft_war/assets/Script/start.js":false,"/Users/shancui/GitHub/aircraft_war/assets/Script/ufo.js":false,"/Users/shancui/GitHub/aircraft_war/assets/Script/ufoGroup.js":false,"/Users/shancui/GitHub/aircraft_war/library/imports/81/package.json":false,"/Users/shancui/GitHub/aircraft_war/library/imports/67/package.json":false,"/Users/shancui/GitHub/aircraft_war/library/imports/3d/package.json":false,"/Users/shancui/GitHub/aircraft_war/library/imports/c5/package.json":false,"/Users/shancui/GitHub/aircraft_war/library/imports/14/package.json":false,"/Users/shancui/GitHub/aircraft_war/library/imports/2d/package.json":false,"/Users/shancui/GitHub/aircraft_war/library/imports/70/package.json":false,"/Users/shancui/GitHub/aircraft_war/library/imports/3f/package.json":false,"/Users/shancui/GitHub/aircraft_war/library/imports/6a/package.json":false,"/Users/shancui/GitHub/aircraft_war/library/imports/c1/package.json":false,"/Users/shancui/GitHub/aircraft_war/library/imports/e7/package.json":false,"/Users/shancui/GitHub/aircraft_war/library/imports/28/package.json":false,"/Users/shancui/GitHub/aircraft_war/library/imports/1e/package.json":false,"/Users/shancui/GitHub/aircraft_war/library/imports/07/package.json":false,"/Users/shancui/GitHub/aircraft_war/library/imports/package.json":false,"/Users/shancui/GitHub/aircraft_war/library/package.json":false,"/Users/shancui/GitHub/aircraft_war/library/imports/3d/3d2d9df3-7a04-4c79-aa1a-3c7c6e703327.js":{"__dirname":"/Users/shancui/GitHub/aircraft_war/library/imports/3d"},"/Users/shancui/GitHub/aircraft_war/library/imports/c5/c597baf8-922b-41fb-bb76-dad310065da4.js":{"__dirname":"/Users/shancui/GitHub/aircraft_war/library/imports/c5"},"/Users/shancui/GitHub/aircraft_war/library/imports/14/14abe7bd-0a8c-42a1-b5a5-fe799e114bfc.js":{"__dirname":"/Users/shancui/GitHub/aircraft_war/library/imports/14"},"/Users/shancui/GitHub/aircraft_war/library/imports/2d/2db2295d-c356-4458-a014-521ab36e593b.js":{"__dirname":"/Users/shancui/GitHub/aircraft_war/library/imports/2d"},"/Users/shancui/GitHub/aircraft_war/library/imports/70/703ca35d-4890-4c1b-98f1-62f3c5c16bcf.js":{"__dirname":"/Users/shancui/GitHub/aircraft_war/library/imports/70"},"/Users/shancui/GitHub/aircraft_war/library/imports/3f/3f0cc1d4-79fc-4e2c-af7e-2b9ff3a76bf8.js":{"__dirname":"/Users/shancui/GitHub/aircraft_war/library/imports/3f"},"/Users/shancui/GitHub/aircraft_war/library/imports/6a/6afa0a61-17b7-4f91-aff3-959b45147a30.js":{"__dirname":"/Users/shancui/GitHub/aircraft_war/library/imports/6a"},"/Users/shancui/GitHub/aircraft_war/library/imports/c1/c11abad6-6403-4ed9-a559-484e1dc44bd6.js":{"__dirname":"/Users/shancui/GitHub/aircraft_war/library/imports/c1"},"/Users/shancui/GitHub/aircraft_war/library/imports/e7/e7aaa8e9-1817-4001-a19a-522994e0c9c7.js":{"__dirname":"/Users/shancui/GitHub/aircraft_war/library/imports/e7"},"/Users/shancui/GitHub/aircraft_war/library/imports/28/280c3aec-6492-4a9d-9f51-a9b00b570b4a.js":{"__dirname":"/Users/shancui/GitHub/aircraft_war/library/imports/28"},"/Users/shancui/GitHub/aircraft_war/library/imports/1e/1e7a0cdf-22e2-40f8-a9fd-0c07d8e79e38.js":{"__dirname":"/Users/shancui/GitHub/aircraft_war/library/imports/1e"},"/Users/shancui/GitHub/aircraft_war/library/imports/07/07c5835e-0105-442e-b3f7-2f64423b2ac0.js":{"__dirname":"/Users/shancui/GitHub/aircraft_war/library/imports/07"},"/Users/shancui/GitHub/aircraft_war/library/imports/81/81be8d98-c12f-4bd4-b658-b9f5574ab08f.js":{"__dirname":"/Users/shancui/GitHub/aircraft_war/library/imports/81"},"/Users/shancui/GitHub/aircraft_war/library/imports/67/67917573-3201-46e0-b747-6ea8f0686918.js":{"__dirname":"/Users/shancui/GitHub/aircraft_war/library/imports/67"},"/Users/shancui/GitHub/aircraft_war/assets/Script/NewScript.js":false,"/Users/shancui/GitHub/aircraft_war/library/imports/96/package.json":false,"/Users/shancui/GitHub/aircraft_war/library/imports/96/96d42acc-32e9-45b1-ae24-65df37b91e4b.js":{"__dirname":"/Users/shancui/GitHub/aircraft_war/library/imports/96"}}}}